package M47;

option java_package = "com.znl.city.proto";  
option java_outer_classname = "M47";  // 州城协议

message WorldTownLegion{//宣战军团信息
	optional string legionName = 1;//军团名字
}

message TownInfo{  //盟城信息
	required int32 townId = 1;//州城id
	required string legionName = 2;//军团名字
	required int32 x = 3; // x坐标
	required int32 y = 4; // y坐标
	required int32 townStatus = 5;//状态 0未开放1可宣战时期2宣战（可派兵）期间3开战期间4保护期间5休战期间
	required string townKingName = 6;//州王名字
}

message TownTeamShortInfo{  //盟城相关队伍简要信息
    required int32 type = 1; /////1攻击方  2防守方
	required int64 totalCapacity = 2; //总战力
    required int32 totalTeamNum = 3; //总队伍数量
    required int32 selfTeamNum = 4; //我的队伍数
}

// 点击州城
message M470000 {
	message S2C {
		required int32 rs =1;
		optional TownInfo townInfo = 2; //盟城信息
		optional int32 nextStateTime = 3;//下一个状态的剩余时间 目前只有2 4有值
		optional int32 marchTime = 4; //行军时间
		repeated WorldTownLegion townLegionList = 5;//宣战军团信息 非归属盟的弹窗
		repeated int32 buffIdList = 6; //洲城增益Buff 归属盟弹窗
		optional int32 deBuffId = 7;//洲城减益buff
		repeated int32 fightBuffIdList = 8;//战斗生效的buff
        optional TownTeamShortInfo teamInfo = 9; //盟城相关队伍简要信息
        optional int64 minAttackCapacity = 10; //部队出战最低战力
		optional int64 minWarOnCapacity = 11; //最低宣战战力
	}

	message C2S {
		required int32 x = 1; // x坐标
		required int32 y = 2; // y坐标
	}
	
}

message M470100{  //盟城宣战
	
	message S2C {
		required int32 rs =1;
		optional int32 townId = 2;//州城id
		optional int32 townStatus = 3;  //成功后，下发的状态
		optional int32 nextStateTime = 4;//下一个状态的剩余时间
		repeated WorldTownLegion townLegionList = 5; //宣战同盟信息列表
		optional TownTeamShortInfo teamInfo = 6; //盟城相关队伍简要信息
	}

	message C2S {
		required int32 townId = 1;//州城id
	}
}

///////////部队派遣走世界派遣统一协议///////


message TownBattleTeamInfo{  //州城战斗队伍信息
	required int32 sort = 1; //排序
	required string playerName = 2; //玩家名字
	required string legionName = 3; //同盟名字
	required int64 capacity = 4; //退伍战力
}


//////////////攻方进攻界面/////守方防守跟攻方的界面一样//////////////////


///////////////战报界面/////////////////

message TownReportTeamInfo{  //队伍简要战报信息
    required string playerName = 1; //玩家名字
    required string legionName = 2; //军团名字
    required int32 percent = 3; //剩余血量百分比
    optional fixed64 teamId = 4; //队伍id
    optional fixed64 legionId = 5; //军团ID
}

////////同盟战报
message TownFightInfo{  //州战 战斗信息，已经包含了自己的了，个人的在里面筛选出来
	required fixed64 battleId = 1;
	required TownReportTeamInfo attackTeam = 2; //攻击方
	required TownReportTeamInfo defendTeam = 3; //防守方
	required int32 wins = 4; //连胜次数 0表示失败 1胜利
}


//TODO 需要确定是否需要实时的 有结束时间了，应该是最后的战斗结果了
/////////////因为战报是静态的，所以可以通过某种标识，只请求一次就行了，减少每次的请求量

message M470002 {   //请求该州的全服战报 上次的战斗结果
    message S2C {
        required int32 rs =1;
        optional int32 townId = 2;//州城id
        optional int32 x = 3; // x坐标
		optional int32 y = 4; // y坐标
		optional int32 endTime = 5; //结束时间
		optional int32 result = 6; //战斗结果 1进攻胜利  2防守胜利
		repeated TownFightInfo townFightInfoList = 7;
		//townFightInfoList为同盟的队伍列表，攻击、防守队伍
		//也可以算出我的队伍（如果指的是自己派遣的队伍，则再加字段）
		//各自的队伍数量直接从列表数量获取
		optional string winLegionName = 8; //本次胜利的盟，空的话证明打不过npc
		optional int32 attackTeamNum = 9; //攻击参战的队伍数
		optional int32 attackTotalNum = 10; //攻击总队伍数
		optional int32 defendTeamNum = 11; //防守参战的队伍数
		optional int32 defendTotalNum = 12; //防守总队伍数
		optional int32 defendIsMonster = 13; //0否 1是守军是否为怪物，用来iv.	守方是NPC时，按钮灰色不能点击
		repeated TownReportTeamInfo attackTeamList = 14; //攻击的队伍
		repeated TownReportTeamInfo defendTeamList = 15; //防守的队伍
		repeated TownBattleTeamInfo attackIdleTeamList = 16; //空闲的队伍信息
		repeated TownBattleTeamInfo defendIdleTeamList = 17; //空闲的防守队伍信息
    }

    message C2S {
        required int32 townId = 1;//州城id
    }
}


///////////州排名/////////////

message TownPlayerInfo{  //盟城的玩家信息
	required string name = 1;  //玩家名字
	required int32 headIcon = 2; //玩家头像
	optional fixed64 playerId = 3; //玩家ID
}

message TownRankInfo{
	required int32 rank = 1;  //排名
	required string legionName = 4;//军团名字
	required TownPlayerInfo townKingInfo = 5;//州王信息
	repeated TownPlayerInfo viceKingInfoList = 6; //副盟主名次 最多有两个
	required int32 totalArea = 7; //总共的国土面积
}

message M470005{  //请求州排名

    message S2C {
        required int32 rs = 1 ;
        repeated TownRankInfo townRankInfoList = 2;
    }

    message C2S {
    }
}

///////////////盟城信息//////////////////////

message M470006{  //请求州城信息

    message S2C {
        required int32 rs = 1 ;
        repeated TownInfo townInfoList = 2;
		optional int32 remainTimes = 3;//当前剩余宣战次数
		optional int32 maxTimes = 4;//最大宣战次数
    }

    message C2S {
    }
}


//////////////////贸易逻辑////TODO 相关操作也要再确认////////////////////

message ExchangeInfo{ //
    required int32 exchangeId = 1; //兑换id 对应表里面的 1 2 3 4
    required int32 exchangeNum = 2; //兑换基数 实时通过同盟等级计算
    required int32 exchangeRatio = 3; //兑换系数 0点重置的时候重算
}

message M470007{ //请求州的贸易信息

    message S2C {
        required int32 rs = 1 ;
        repeated ExchangeInfo exchangeInfoList = 2; //兑换列表信息
        optional int32 curTownTradeNum = 3; //当前盟城的可贸易次数
        optional int32 maxTownTradeNum = 4; //当前盟城的最大贸易次数
    }

    message C2S {
        required int32 townId = 1;//州城id
    }
}

message M470009{  // 请求兑换

    message S2C {
        required int32 rs = 1 ;
        optional int32 curTownTradeNum = 2; //当前盟城的可贸易次数
        optional int32 maxTownTradeNum = 3; //当前盟城的最大贸易次数
    }
    
    message C2S {
        required int32 townId = 1;//州城id
        required int32 exchangeId = 2; //兑换id
    }
}



//////TODO///邮件的，走统一邮件接口///////////////

message M470200{   //群城小红点推送
	message S2C {
	    required int32 num = 1; //具体数量
	}

	message C2S {
	}
}

message TownStateInfo{
	required int32 typeId = 1;
	required int32 state = 2; //1 己方，2非己方 未占领的不发
}

message M470201{  //请求天下大势信息
	
	message S2C {
	    repeated TownStateInfo townStateInfoList = 1;
	}

	message C2S {
    }
}

